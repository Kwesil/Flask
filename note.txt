# Refreshing Flask framework
# Flask constructor takes name of current module (__name__) as argument
# route() function of Flask class is a decorator which tells the application which URL should call the associated function
# app.route(rule, options)
# rule parameter represents URL binding with the function
# options is a list of parameters ti be forwarded to the underlying Rule object.
# run() method runs the application on local development server.
# app.run(host, port, debug, options)
# run debug mode when under development
# app.debug = True
# app.run()
# app.run(debug=True)
# when debugging is off,the development derver on local computer can be made available to users on netowrk by
# app.run(host='0.0.0.0') // OS listens to all public IPs 
# url_for() function is very useful for dynamically building URL for a specific function.
# It allows to change URLs in one go, without having to remeber to change URLs all over the place
# HTTP method - hypertext transfer protocol is an application protocol for distributed, collaborative, hypermedia information systems
# HTTP/1.0 specifocation defined the GET, POST, and HEAD methods
# HTTP/1.1 specification added 5 new methods; OPTIONS, PUT, DELETE, TRACE and CONNECT
# GET and POST are the commonly used methods
# GET - Sends data in unencrypted form to the server. Most common method
# POST - Used to send HTNL form data to server. Data received by POST method is not cached by server
# By default Flask route responds to GET requests. 
# A web application often requires static files
# Javascript file or CSS file supporting a webpage
# available at /static on the application
# url_for('static', filename='style.css')
# app.static_url_path - can be used to specifya different path for the static files on the web. Defaults to the name of the static_folder static_folder
# app.static.folder - the folder with the static files that should be reserved as static_url_path. Defaults to the static folder in the root path of the application
# 